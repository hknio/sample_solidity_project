{
    "name": "Sample Project",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "dependencies": {
        "@openzeppelin/contracts": "4.5.0",
        "ethers-eip712": "^0.2.0",
        "prettier-plugin-solidity": "^1.0.0-beta.19"
    },
    "devDependencies": {
        "@nomiclabs/hardhat-ethers": "^2.0.0",
        "@nomiclabs/hardhat-etherscan": "^2.1.8",
        "@nomiclabs/hardhat-waffle": "^2.0.0",
        "@openzeppelin/upgrades": "^2.8.0",
        "@typechain/ethers-v5": "^4.0.0",
        "@types/chai": "^4.2.22",
        "@types/mocha": "^8.2.2",
        "@types/node": "^14.14.41",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "chai": "^4.3.4",
        "chai-bignumber": "^3.0.0",
        "dotenv": "^8.2.0",
        "eslint": "^8.3.0",
        "eslint-config-prettier": "^8.2.0",
        "eslint-plugin-prettier": "^3.4.0",
        "eslint-plugin-react": "^7.23.2",
        "ethereum-waffle": "^3.1.2",
        "ethers": "^5.5.2",
        "hardhat": "^2.2.0",
        "hardhat-abi-exporter": "^2.2.1",
        "hardhat-deploy": "^0.7.5",
        "hardhat-deploy-ethers": "^0.3.0-beta.7",
        "hardhat-typechain": "^0.3.5",
        "prettier": "^2.2.1",
        "pretty-quick": "^3.1.0",
        "solc": "0.8.11",
        "solhint": "^3.3.4",
        "solidity-coverage": "^0.7.22",
        "ts-generator": "^0.1.1",
        "ts-morph": "^10.0.2",
        "ts-node": "^9.1.1",
        "typechain": "^4.0.3",
        "typescript": "^4.2.4"
    },
    "scripts": {
        "build": "npm run compile && npx hardhat typechain",
        "clean": "npx hardhat clean",
        "compile": "npx hardhat compile",
        "test": "npx hardhat test",
        "coverage": "npm run build && npx hardhat coverage --temp artifacts --network coverage",
        "rebuild": "npm run clean && npm run build && npm run test",
        "deploy": "npx hardhat run scripts/deploy.ts --network",
        "lint": "eslint ./ --fix",
        "lint-quick": "pretty-quick --staged --pattern \"**/*.*(ts|tsx)\""
    },
    "author": "Evgeniy Bezuglyi (e.bezuglyi@hacken.io)"
}
